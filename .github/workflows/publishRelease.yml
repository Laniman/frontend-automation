name: AutoPublishing according to release tag

on:
  push:
    tags:
      - '*'

jobs:
  validate:
    runs-on: ubuntu-latest
    name: 'Runner'

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: NodeJS setup
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - uses: ./.github/actions/publishRelease
        name: Get release branch
        id: getReleaseTag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        if: steps.getReleaseTag.outputs.branch
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.getReleaseTag.outputs.branch }}

      - name: Install dependencies
        if: steps.getReleaseTag.outputs.branch
        run: npm install --no-save --legacy-peer-deps

      - name: Publishing
        if: steps.getReleaseTag.outputs.branch
        env:
          AS_CI: true
        run: |
          rm -rf .git/hooks

          git config --global user.name 'platform-deps-update'
          git config --global user.email 'platform-deps-update@airslate.com'

#          git push --delete origin ${{ steps.getReleaseTag.outputs.version }}
#          npm --no-git-tag-version version ${{ steps.getReleaseTag.outputs.version }}
#          git add -A
#          git commit -m '${{ steps.getReleaseTag.outputs.version }} [skip bot]'
#          git push
#
#          git tag -d ${{ steps.getReleaseTag.outputs.version }}
#          git push origin :refs/tags/${{ steps.getReleaseTag.outputs.version }}
#          git tag ${{ steps.getReleaseTag.outputs.version }}
#          git push origin ${{ steps.getReleaseTag.outputs.version }}
#          npm publish --tag ${{ steps.getReleaseTag.outputs.tag }}
