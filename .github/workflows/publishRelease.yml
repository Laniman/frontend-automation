name: AutoPublishing according to release tag

on:
  push:
    tags:
      - '*'

jobs:
  validate:
    runs-on: ubuntu-latest
    name: 'Runner'

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: NodeJS setup
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - uses: ./.github/actions/publishRelease
        name: Get release branch
        id: getReleaseTag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        if: steps.getReleaseTag.outputs.branch
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ steps.getReleaseTag.outputs.branch }}

      - name: Install dependencies
        if: steps.getReleaseTag.outputs.branch
        run: npm install --no-save --legacy-peer-deps

      - name: Publishing
        if: steps.getReleaseTag.outputs.branch
        env:
          AS_CI: true
        run: |
          rm -rf .git/hooks

          git config --global user.name 'platform-deps-update'
          git config --global user.email 'platform-deps-update@airslate.com'

          # Удалить тег локально
          git tag -d ${{ steps.getReleaseTag.outputs.version }}
          # Удалить тег в origin
          git push --delete origin ${{ steps.getReleaseTag.outputs.version }}

          # Установить версию и записать данные в package.json
          npm --no-git-tag-version version ${{ steps.getReleaseTag.outputs.version }}

          # Создание коммита новой версии пакета
          git add -A
          git commit -m '${{ steps.getReleaseTag.outputs.version }} [skip bot]'
          git push

          # Публикация пакета с конкретным тегом тегом (по умолчанию latest)
          npm publish --tag ${{ steps.getReleaseTag.outputs.tag }}

          # Создать тег локально
          git tag ${{ steps.getReleaseTag.outputs.version }}
          # Создать тег в origin
          git push origin ${{ steps.getReleaseTag.outputs.version }}
          sleep 2
               
      - name: Undraft target release
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.payload.organization.login,
              repo: context.payload.repository.name,
              release_id: context.payload.release.id,
              draft: false,
            });