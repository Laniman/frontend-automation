name: AutoPublishing according to release tag

on:
  release:
    types:
      - created

jobs:
  validate:
    runs-on: ubuntu-latest
    name: 'Runner'

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: NodeJS setup
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get branch
        uses: actions/github-script@v5
        id: branch
        with:
          result-encoding: string
          script: |
            console.log('Branch:', context.payload.release.target_commitish);
            return context.payload.release.target_commitish;

      - name: Get dist tag name
        uses: actions/github-script@v5
        id: dist-tag
        with:
          result-encoding: string
          script: |
            console.log('Dist Tag:', context.payload.release.target_commitish.replace('/', '-'));
            return context.payload.release.target_commitish.replace('/', '-');

      - name: Get version
        uses: actions/github-script@v5
        id: version
        with:
          result-encoding: string
          script: |
            console.log('Version:', context.payload.release.tag_name);
            return context.payload.release.tag_name;

    - name: Checkout target branch
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ steps.branch.outputs.result }}

#      - name: Setup registry
#        run: |
#          npm config set registry https://artifactory.infrateam.xyz/artifactory/api/npm/npm/
#          npm config set always-auth true
#          echo "//artifactory.infrateam.xyz/api/npm/npm/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
#          echo "//artifactory.infrateam.xyz/artifactory/api/npm/npm/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
#          npm -v

      - name: Install dependencies
        run: npm install --no-save --legacy-peer-deps

      - name: Publishing
        env:
          AS_CI: true
        run: |
          rm -rf .git/hooks

          git config --global user.name 'platform-deps-update'
          git config --global user.email 'platform-deps-update@airslate.com'

          # Удалить тег локально
          git tag -d ${{ steps.getReleaseTag.outputs.version }}
          # Удалить тег в origin
          git push --delete origin ${{ steps.getReleaseTag.outputs.version }}

          # Установить версию и записать данные в package.json
          npm --no-git-tag-version version ${{ steps.getReleaseTag.outputs.version }}

          # Создание коммита новой версии пакета
          git add -A
          git commit -m '${{ steps.getReleaseTag.outputs.version }} [skip bot]'
          git push

          # Публикация пакета с конкретным тегом тегом (по умолчанию latest)
          # npm publish --tag ${{ steps.getReleaseTag.outputs.tag }}

          # Создать тег локально
          git tag ${{ steps.getReleaseTag.outputs.version }}
          # Создать тег в origin
          git push origin ${{ steps.getReleaseTag.outputs.version }}
          sleep 2
               
      - name: Undraft target release
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              release_id: context.payload.release.id,
              draft: false,
            });